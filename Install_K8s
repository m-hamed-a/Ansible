###################################################################################################################################
#                                                 PlayBook: Install Kubernetes                                                    #
#                                                 Hosts:    All cluster nodes                                                     #
###################################################################################################################################

- name: Installing Kubernetes
  hosts: all
  tasks:

###################################################################################################################################
#                                                    Create ansible Directory                                                     #
###################################################################################################################################

  - name: Create a Directory /root/ansible
    file:
      path: /root/ansible
      state: directory
      mode: 0644
      owner: root
      group: root

###################################################################################################################################
#                                                Download ans Install Containderd                                                 #
###################################################################################################################################

  - name: Create a Directory /root/ansible/containerd
    file:
      path: /root/ansible/containerd
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Download Containerd
    get_url:
      url: https://github.com/containerd/containerd/releases/download/v1.7.0/containerd-1.7.0-linux-amd64.tar.gz
      dest: /root/ansible/containerd
      mode: 0644
      group: root
      owner: root

  - name: Extract Containderd to /usr/local
    unarchive:
      src: /root/ansible/containerd/containerd-1.7.0-linux-amd64.tar.gz
      dest: /usr/local
      copy: no

###################################################################################################################################
#                                                   Download ans Install runc                                                     #
###################################################################################################################################

  - name: Create a Directory /root/ansible/runc
    file:
      path: /root/ansible/runc
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Download runc
    get_url:
      url: https://github.com/opencontainers/runc/releases/download/v1.1.5/runc.amd64
      dest: /root/ansible/runc
      mode: 0644
      group: root
      owner: root

  - name: Install runc
    shell: install -m 755 /root/ansible/runc/runc.amd64 /usr/local/sbin/runc

###################################################################################################################################
#                                                Download and Install CNI Plugins                                                 #
###################################################################################################################################

  - name: Create a Directory /root/ansible/cni
    file:
      path: /root/ansible/cni
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Download CNI Plugins
    get_url:
      url: https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-amd64-v1.2.0.tgz
      dest: /root/ansible/cni
      mode: 0644
      group: root
      owner: root

  - name: Create a Directory /root/ansible/cni
    file:
      path: /opt/cni/bin
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Extract CNI Plugins to /opt/cni/bin
    unarchive:
      src: /root/ansible/cni/cni-plugins-linux-amd64-v1.2.0.tgz
      dest: /opt/cni/bin
      copy: no

###################################################################################################################################
#                                                     Containerd Configuration                                                    #
###################################################################################################################################

  - name: Create a Directory /etc/containerd/
    file:
      path: /etc/containerd/
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Download Containerd Service
    get_url:
      url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
      dest: /etc/systemd/system/containerd.service
      mode: 0644
      group: root
      owner: root

  - name: Containerd Default Configuration
    shell: containerd config default > /etc/containerd/config.toml

  - name: Changing Containerd Cgroup
    lineinfile: 
      path: /etc/containerd/config.toml
      regexp: 'SystemdCgroup = false' 
      line: '            SystemdCgroup = true'

  - name: daemon-reload
    systemd: 
      daemon_reload: true

  - name: Start and enable Containerd Service
    service: 
      name: containerd.service
      state: started
      enabled: yes

###################################################################################################################################
#                                                         Disable Swap                                                            #
###################################################################################################################################

  - name: Disable Swap
    shell: swapoff -a
    
  - name: Remove Swap from /etc/fstab
    lineinfile:
      path: /etc/fstab
      regexp: 'swap.img'
      state: absent
      backup: yes

###################################################################################################################################
#                                                         Disable UFW                                                             #
###################################################################################################################################

  - name: Disable UFW
    systemd:
      name: ufw 
      state: stopped
      enabled: no 

###################################################################################################################################
#                                                     Kubernetes modules                                                          #
###################################################################################################################################

  - name: Create an empty file
    file:
      path: /etc/modules-load.d/k8s.conf
      state: touch

  - name: Add Kubernetes modules to modules-load.d
    blockinfile:
      path: /etc/modules-load.d/k8s.conf
      insertafter: EOF
      block: |
        overlay
        br_netfilter

  - name: Load Kubernetes modules
    shell: modprobe {{ item }}
    with_items:
      - overlay
      - br_netfilter

###################################################################################################################################
#                                                  Kubernetes sysctl settings                                                     #
###################################################################################################################################

  - name: Create an empty file
    file:
      path: /etc/sysctl.d/k8s.conf
      state: touch

  - name: Add Kubernetes sysctl settings
    blockinfile:
      path: /etc/sysctl.d/k8s.conf
      insertafter: EOF
      block: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1

  - name: Apply sysctl settings
    shell: sysctl --system

###################################################################################################################################
#                                                  Install required packages                                                      #
###################################################################################################################################

  - name: apt update
    apt: 
      update_cache: yes

  - name: Install required packages
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
      state: present

###################################################################################################################################
#                                                 Downlaod a Kubernetes package                                                   #
###################################################################################################################################

  - name: Downlaod a Kubernetes package
    get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
      mode: 0644
      group: root
      owner: root

###################################################################################################################################
#                                                   Add Kubernetes repository                                                     #
###################################################################################################################################

  - name: Create an empty file
    file:
      path: /etc/apt/sources.list.d/kubernetes.list
      state: touch
      
  - name: Add Kubernetes repository
    lineinfile: 
      path: /etc/apt/sources.list.d/kubernetes.list
      line: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main

###################################################################################################################################
#                                             Install Kubelet, Kubeadm and Kubectl                                                #
###################################################################################################################################

  - name: apt update
    apt: 
      update_cache: yes

  - name: Install Kubelet, Kubeadm and Kubectl
    apt: 
      name:
        - kubeadm=1.26.3-00
        - kubelet=1.26.3-00
        - kubectl=1.26.3-00
      state: present

###################################################################################################################################
#                                              Hold Kubelet, Kubeadm and Kubectl                                                  #
###################################################################################################################################

  - name: Hold Kubelet
    ansible.builtin.dpkg_selections:
      name: kubelet
      selection: hold

  - name: Hold Kubeadm
    ansible.builtin.dpkg_selections:
      name: kubeadm
      selection: hold

  - name: Hold Kubectl
    ansible.builtin.dpkg_selections:
      name: kubectl
      selection: hold  

###################################################################################################################################
#                                                       End of PlayBook                                                           #
###################################################################################################################################





###################################################################################################################################
#                                               PlayBook: Create Kubernetes Cluster                                               #
#                                               Hosts:    Master-1                                                                #
###################################################################################################################################

- name: Create Kubernetes Cluster
  hosts: master-1
  tasks:

###################################################################################################################################
#                                                       Create Cluster                                                            #
###################################################################################################################################

  - name: Create Cluster 
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint="172.22.10.138:6443" \
           --upload-certs --apiserver-advertise-address=0.0.0.0
    register: cluster_output

  - name: Create a Directory /root/ansible/cluster
    file:
      path: /root/ansible/cluster
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Save Cluster output in a file
    copy:
      content: |
        {{ cluster_output.stdout_lines|join('
        ') }}
      dest: /root/ansible/cluster/cluster_output.txt
      force: yes

###################################################################################################################################
#                                                     Configure Kubectl                                                           #
###################################################################################################################################

  - name: Configure Kubectl
    blockinfile:
      path: /root/.bashrc
      block: |
        export KUBECONFIG=/etc/kubernetes/admin.conf

###################################################################################################################################
#                                                      Create Flunnel Pods                                                        #
###################################################################################################################################

  - name: Create a Directory /root/ansible/cluster
    file:
      path: /root/.kube
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Copy Kubernetes config to $HOME/.kube/
    shell: cp -i /etc/kubernetes/admin.conf /root/.kube/config

  - name: Create Flunnel Pods
    shell: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml

###################################################################################################################################
#                                                       End of PlayBook                                                           #
###################################################################################################################################





###################################################################################################################################
#                                             PlayBook: Join all other Master nodes                                               #
#                                             Hosts:    Masters                                                                   #
###################################################################################################################################

- name: Join all other Master nodes
  hosts: masters
  tasks:

###################################################################################################################################
#                                                Join the Masters to the Cluster                                                  #
###################################################################################################################################

  - name: Create a Directory /root/ansible/cluster
    file:
      path: /root/ansible/cluster
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Save Cluster output in a file
    copy:
      content: |
        {{ hostvars['master-1']['cluster_output'].stdout_lines|join('
        ') }}
      dest: /root/ansible/cluster/master_cluster_output.txt
      force: yes  

  - name: Create a script file
    copy:
      content: |
        #!/bin/bash
      dest: /root/ansible/cluster/master_cluster_output.sh
      force: yes
      mode: 755  

  - name: Split Master part join command and copy it to script file
    shell: "sed -n '72,74p' /root/ansible/cluster/master_cluster_output.txt >> /root/ansible/cluster/master_cluster_output.sh"
    args:
      warn: false

  - name: Joining to Cluster
    shell: /root/ansible/cluster/master_cluster_output.sh

###################################################################################################################################
#                                                     Configure Kubectl                                                           #
###################################################################################################################################

  - name: Configure Kubectl
    blockinfile:
      path: /root/.bashrc
      block: |
        export KUBECONFIG=/etc/kubernetes/admin.conf

###################################################################################################################################
#                                                       End of PlayBook                                                           #
###################################################################################################################################





###################################################################################################################################
#                                                PlayBook: Join all Worker nodes                                                  #
#                                                Hosts:    Masters                                                                #
###################################################################################################################################

- name: Join all Worker nodes
  hosts: workers
  tasks:

###################################################################################################################################
#                                                Join the Workers to the Cluster                                                  #
###################################################################################################################################

  - name: Create a Directory /root/ansible/cluster
    file:
      path: /root/ansible/cluster
      state: directory
      mode: 0644
      owner: root
      group: root

  - name: Save Cluster output in a file
    copy:
      content: |
        {{ hostvars['master-1']['cluster_output'].stdout_lines|join('
        ') }}
      dest: /root/ansible/cluster/worker_cluster_output.txt
      force: yes  

  - name: Create a script file
    copy:
      content: |
        #!/bin/bash
      dest: /root/ansible/cluster/worker_cluster_output.sh
      force: yes
      mode: 755  

  - name: Split Master part join command and copy it to script file
    shell: "tail -n 2 /root/ansible/cluster/worker_cluster_output.txt >> /root/ansible/cluster/worker_cluster_output.sh"

  - name: Joining to Cluster
    shell: /root/ansible/cluster/worker_cluster_output.sh

###################################################################################################################################
#                                                       End of PlayBook                                                           #
###################################################################################################################################
